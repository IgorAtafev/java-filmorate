DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS user_friends CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS review_likes CASCADE;

CREATE TABLE IF NOT EXISTS mpa (
  id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(100) NOT NULL,
  description varchar(200) NOT NULL,
  release_date date NOT NULL,
  duration int NOT NULL,
  mpa_id int NOT NULL REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS users (
  id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(50) NOT NULL,
  login varchar(50) NOT NULL,
  name varchar(50) NOT NULL,
  birth_day date NOT NULL
);

CREATE TABLE IF NOT EXISTS user_friends (
  user_id bigint NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  friend_id bigint NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
  film_id bigint NOT NULL REFERENCES films (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  user_id bigint NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS genres (
  id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id bigint NOT NULL REFERENCES films (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  genre_id int NOT NULL REFERENCES genres (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS reviews (
  id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  content varchar(500) NOT NULL,
  is_positive boolean NOT NULL,
  film_id bigint NOT NULL REFERENCES films (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  user_id bigint NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  useful int NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS review_likes (
  review_id bigint NOT NULL REFERENCES reviews (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  user_id bigint NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  is_useful boolean NOT NULL,
  PRIMARY KEY (review_id, user_id, is_useful)
);